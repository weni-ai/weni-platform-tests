name: Build Platform Tests in Dockerhub (Push Branch)

on:
  push:
    branches:
      - main

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        run: |
            TAG=$(echo $GITHUB_REF|cut -d"/" -f3)
            echo "Found environment: DEVELOP - $TAG"
            echo "MANIFESTS_ENVIRONMENT=develop" >> $GITHUB_ENV
            echo "MANIFESTS_ENVIRONMENT=develop"
            echo "TAG=$TAG" >> $GITHUB_ENV
            echo "TAG=$TAG"
            VERSION=${TAG#v}
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            echo "VERSION=$VERSION"
            echo "COMMIT_SHA=$GITHUB_SHA" >> $GITHUB_ENV
            echo "COMMIT_SHA=$GITHUB_SHA"
            echo "IMAGE_REPOSITORY=weni-ai/weni-platform-tests" >> ${GITHUB_ENV}
            echo "IMAGE_REPOSITORY=weni-ai/weni-platform-tests"
            echo "IMAGE_TAG=weniai/platform-tests:$TAG-${GITHUB_SHA::7}" >> $GITHUB_ENV
            echo "IMAGE_TAG=weniai/platform-tests:$TAG-${GITHUB_SHA::7}"

      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          ref: ${{env.GITHUB_SHA}}
          repository: weni-ai/weni-platform-tests

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push - Platform Tests Image
        id: docker_build1
        uses: docker/build-push-action@v2
        with:
          context: .
          labels: |
            branch=${{env.TAG}}
            commit=${{env.COMMIT_SHA}}
            repository=https://github.com/${{env.IMAGE_REPOSITORY}}
          file: docker/Dockerfile
          push: true
          tags: ${{env.IMAGE_TAG}}
          no-cache: true

      - name: Check out Kubernetes Manifests
        uses: actions/checkout@master
        with:
          ref: main
          repository: Ilhasoft/kubernetes-manifests-platform
          token: ${{secrets.DEVOPS_GITHUB_PERMANENT_TOKEN}}
          path: ./kubernetes-manifests/

      - name: Update image on deployment
        run: |
            which jq > /dev/null 2>&1 || ( sudo apt update ; sudo apt install -y jq )
            # Dep: coreutils
            verlte() {
              [ "$1" = "`echo -e "$1\n$2" | sort -V | head -n1`" ]
            }
            verlt(){
              [ "$1" = "$2" ] && return 1 || verlte $1 $2
            }
            export PROJECT_DIR="platform-tests" PATCH_TARGET="deployment.json"
            ENV_DIR="kubernetes-manifests/platforms-tests/${MANIFESTS_ENVIRONMENT}"
            for e in ${ENV_DIR}; do
              echo "Update ${e}:"
              if [ ! -d "${e}" ] ; then
                echo "${e}: Does not exist, skipping"
              elif [ ! -r "${e}/kustomization.yaml" ] ; then
                echo "${e}/kustomization.yaml: Does not readable, skipping"
              elif [ ! -r "${e}/${PATCH_TARGET}" ] ; then
                echo "${e}/${PATCH_TARGET}: Does not readable, skipping"
              else
                OLD_IMAGE=$(
                  cat "${e}/${PATCH_TARGET}" \
                    | jq '.[] | select(.path == "/spec/template/spec/containers/0/image") | .value'
                )
                echo "Old image to replace: ${OLD_IMAGE}"
                OLD_VERSION=$(
                  echo "${OLD_IMAGE}" \
                    | sed s'/^.*[v:-]\([0-9]*\.[0-9]*\.[0-9]*\).*$/\1/'g \
                    | head -n1
                )
                echo "Old image version to compare: ${OLD_VERSION}<=${{env.VERSION}}"
                if verlte "${OLD_VERSION}" "${VERSION}" || [[ ! "${OLD_VERSION}" =~ [0-9]+\.[0-9]+\.[0-9]+ ]] ; then
                  echo 'New configurations:'
                  new_configuration=$(
                    cat "${e}/${PATCH_TARGET}" \
                      | jq '(..|select(.path == "/spec/template/spec/containers/0/image")?) += {value: "'"${{env.IMAGE_TAG}}"'"}'
                  )
                  echo "${new_configuration}"
                  echo "${new_configuration}" > "${e}/${PATCH_TARGET}"
                else
                  echo "Version in file is greater than build, skipping update yaml"
                fi
              fi
            done

      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.DEVOPS_GITHUB_PERMANENT_TOKEN }}
          repository: Ilhasoft/kubernetes-manifests-platform
          directory: ./kubernetes-manifests/
          branch: main
          message: "From Platforms Tests Build (Push Branch)"

      - name: Generated Image
        run: |
            echo "IMAGE:      " ${{env.IMAGE_TAG}}